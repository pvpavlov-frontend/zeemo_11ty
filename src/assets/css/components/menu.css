.header {
    border-bottom: 1px solid #ffffff1f;
    z-index: 1;
}

/* containers */

.header__container {
    padding: 10px;
    /* must be equal to .main-menu__link padding */
}

/* logo */

.header__logo {
    position: absolute;
    top: 10px;
    /* .header__container padding not calculated */
    left: 10px;
}

.logo a {
    display: block;
    padding: 10px;
}

.logo a img {
    display: block;
    /* normalize geometry img inside a */
}

/* main-menu */

.header__main-menu-container {
    margin: 0 72px 0 102px;
    /* 8 + 86 + 8 = 102 */
    /* 8 + 20 + 8 + 8 + 20 + 8 + (8 - 8) */
}

.main-menu {
    padding: 10px 0px;
    /* We make top/bottom padding, because lists items is inline, and there don't work vertical padding, only horizontal: https://developer.mozilla.org/en-US/docs/Web/CSS/padding-inline */
}

.main-menu__item {
    padding: 0px 10px;
    display: inline;
}

.main-menu__link {
    /*padding: 0px 10px;*/
    /* must be equal to .header__container padding */
}

/* social */

.header__social-links {
    /* TODO maybe rename to social links */
    position: absolute;
    top: 10px;
    right: 10px;
    padding: 0px;
}

.social-links__item {
    float: left;
}

.social-links__link {
    display: block;
    padding: 10px;
}

.social-links__link img {
    display: block;
}

/* main content */

.main__container {
    padding: 10px;
}

.header__container {
    position: relative;
}

/* social */

/* Since IE 8, we can remove for list list-style property. */

.social-links {
    list-style: none;
}

.burger {
    /* Burger is not needed if it is not a mobile version and javascript is not connected. */
    display: none;
}

@media (max-width: 1023px) {
    .header__main-menu-container {
        /* margin top 8 + 20 + 8  must be equal to element with max height in header */
        margin: 36px 0 0 0;
    }

    .main-menu__item {
        display: block;
        /* Menu items will line up one above the other. */
    }

    .js .header__main-menu-container {
        /* Logo with js is static, and margin is no needed anymore. */
        margin: 0;
    }

    .js .burger {
        /* And here the burger is already present. */
        /* Coincidentally, the height of the button is equal to the height of the logo, and there is no need to center the button. But if it were not so, you need to add padding for the container. */
        position: absolute;
        top: 10px;
        left: 10px;
        display: block;
        padding: 10px;
    }

    /* TODO: states for button. */

    .js .burger__button {
        /* Button is already present too. */
        display: block;
        /* Here we put a display block for the button, otherwise, due to its default inline-block model, we will have 1 extra pixel from the parent. */
        width: 30px;
        height: 20px;
        padding: 3px;
        border: 0;
        background-image: url("../../img/menu/burger.png");
        background-position: center;
        background-size: 24px 14px;
        background-repeat: no-repeat;

        padding: 16px 10px 16px 10px;
        width: 45px;
        border-radius: 0px;
        background-color: #d22108;
        float: right;
    }

    .js .burger__button .burger__button-row {
        display: none;
    }

    .js .burger__button--opened {
        background-image: url("../../img/menu/cross.png");
        background-position: center;
        background-size: 20px;
        background-repeat: no-repeat;
    }

    .js .burger__button--animated,
    .js .burger__button--animated.burger__button--opened {
        background-image: none;
        padding: 0;
    }

    .js .burger__button--animated .burger__button-row {
        position: relative;
        display: block;
        width: 30px;
        height: 2px;
        background-color: #000000;
        transition: background-color 0.3s;
    }

    .js .burger__button--animated .burger__button-row::before,
    .js .burger__button--animated .burger__button-row::after {
        content: "";
        position: absolute;
        left: 0;
        width: 100%;
        height: 2px;
        background-color: #000000;
        transition: top 0.3s 0.3s, transform 0.3s;
    }

    .js .burger__button--animated .burger__button-row::before {
        top: 10px;
    }

    .js .burger__button--animated .burger__button-row::after {
        top: -10px;
    }

    .js .burger__button--animated.burger__button--opened .burger__button-row {
        background-color: transparent;
    }

    .js .burger__button--animated.burger__button--opened .burger__button-row::before {
        transform: rotate(30deg);
        top: 0;
        transition: top 0.3s, transform 0.3s 0.3s;
    }

    .js .burger__button--animated.burger__button--opened .burger__button-row::after {
        transform: rotate(-30deg);
        top: 0;
        transition: top 0.3s, transform 0.3s 0.3s;
    }

    .js .header__logo {
        /* The button has appeared, and it has absolute positioning. To prevent the logo from running over the button, we will return static positioning to it. */
        position: static;
        display: block;
        width: 201px;
        height: 62px;
        margin: 0 auto;
    }

    .js .header__main-menu-container {
        /* Default class for menu (with js). */
        display: none;
    }

    .js .header__main-menu-container--opened {
        /* Class for opened menu. */
        display: block;
    }
}

@supports (display: flex) {

    /* https://developer.mozilla.org/en-US/docs/Web/CSS/@supports */
    .header__container {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header__main-menu-burger {
        display: none;
    }

    .header__main-menu-container {
        margin: 0;
    }

    .header__logo {
        position: static;
        /* The flex property works, and you can return the elements to their positioning. */
    }

    .header__social-links {
        position: static;
    }

    @media (max-width: 1023px) {
        .header__container {
            flex-wrap: wrap;
            /* Let's allow the transfer of elements so that on a small screen they become one under the other. */
        }

        .header__main-menu-burger {
            box-sizing: border-box;
            width: 72px;
            /* The width of the burger container is equal to the width of the social media links. This will make aligning the flex parent work better. */
        }

        .js .header__main-menu-burger {
            position: static;
            order: 1;
            /* We change the arrangement of elements on the mobile version, and explicitly indicate the order to them. */
        }

        .header__logo {
            order: 2;
        }

        .header__social-links {
            order: 3;
        }

        .header__main-menu-container {
            width: 100%;
            /* The menu becomes a dropdown and is transferred to a new row. Should fill the entire screen width. */
            margin: 0;
            order: 4;
        }
    }
}

/* absolute header */

.header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
}